[{"c:\\projects\\react-emessage\\client\\src\\pages\\message.page\\MessagePage.jsx":"1","c:\\projects\\react-emessage\\client\\src\\components\\contact.panel\\ContactPanel.jsx":"2","c:\\projects\\react-emessage\\client\\src\\components\\add.friend.modal\\AddFriendModal.jsx":"3","c:\\projects\\react-emessage\\client\\src\\components\\send.message\\SendMessage.jsx":"4","c:\\projects\\react-emessage\\client\\src\\components\\friend.list\\FriendList.jsx":"5","c:\\projects\\react-emessage\\client\\src\\components\\menu\\TheMenu.jsx":"6","c:\\projects\\react-emessage\\client\\src\\App.js":"7","c:\\projects\\react-emessage\\client\\src\\pages\\SignUpPage.jsx":"8","c:\\projects\\react-emessage\\client\\src\\pages\\NotFoundPage.jsx":"9","c:\\projects\\react-emessage\\client\\src\\pages\\SignInPage.jsx":"10","c:\\projects\\react-emessage\\client\\src\\components\\firend.item\\FriendItem.jsx":"11","c:\\projects\\react-emessage\\client\\src\\firebase\\config.js":"12","c:\\projects\\react-emessage\\client\\src\\components\\message.panel\\MessagePanel.jsx":"13","c:\\projects\\react-emessage\\client\\src\\components\\message.item\\MessageItem.jsx":"14","c:\\projects\\react-emessage\\client\\src\\components\\message.box\\MessageBox.jsx":"15","c:\\projects\\react-emessage\\client\\src\\components\\the.header\\TheHeader.jsx":"16","c:\\projects\\react-emessage\\client\\src\\index.js":"17","c:\\projects\\react-emessage\\client\\src\\redux\\store.js":"18","c:\\projects\\react-emessage\\client\\src\\redux\\friendReducer\\type.js":"19","c:\\projects\\react-emessage\\client\\src\\redux\\friendReducer\\action.js":"20","c:\\projects\\react-emessage\\client\\src\\redux\\friendReducer\\reducer.js":"21","c:\\projects\\react-emessage\\client\\src\\components\\request.list.modal\\RequestList.jsx":"22","c:\\projects\\react-emessage\\client\\src\\components\\request.item\\RequestItem.jsx":"23"},{"size":631,"mtime":1609997131915,"results":"24","hashOfConfig":"25"},{"size":320,"mtime":1609943265277,"results":"26","hashOfConfig":"25"},{"size":1712,"mtime":1610036709301,"results":"27","hashOfConfig":"25"},{"size":1476,"mtime":1609994026970,"results":"28","hashOfConfig":"25"},{"size":755,"mtime":1609813716533,"results":"29","hashOfConfig":"25"},{"size":1303,"mtime":1610039663804,"results":"30","hashOfConfig":"25"},{"size":1955,"mtime":1609998428902,"results":"31","hashOfConfig":"25"},{"size":3119,"mtime":1610027937291,"results":"32","hashOfConfig":"25"},{"size":162,"mtime":1609901819068,"results":"33","hashOfConfig":"25"},{"size":2271,"mtime":1609997976398,"results":"34","hashOfConfig":"25"},{"size":674,"mtime":1609815817793,"results":"35","hashOfConfig":"25"},{"size":607,"mtime":1609958640919,"results":"36","hashOfConfig":"25"},{"size":758,"mtime":1609818440529,"results":"37","hashOfConfig":"25"},{"size":429,"mtime":1609860040680,"results":"38","hashOfConfig":"25"},{"size":266,"mtime":1609858433483,"results":"39","hashOfConfig":"25"},{"size":524,"mtime":1609900694965,"results":"40","hashOfConfig":"25"},{"size":745,"mtime":1609899604861,"results":"41","hashOfConfig":"25"},{"size":146,"mtime":1609809819866,"results":"42","hashOfConfig":"25"},{"size":127,"mtime":1609998216843,"results":"43","hashOfConfig":"25"},{"size":280,"mtime":1609998244406,"results":"44","hashOfConfig":"25"},{"size":1186,"mtime":1609998273841,"results":"45","hashOfConfig":"25"},{"size":1526,"mtime":1610050847461,"results":"46","hashOfConfig":"25"},{"size":1295,"mtime":1610053028967,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1t5d5qe",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},"c:\\projects\\react-emessage\\client\\src\\pages\\message.page\\MessagePage.jsx",["106"],"c:\\projects\\react-emessage\\client\\src\\components\\contact.panel\\ContactPanel.jsx",[],["107","108"],"c:\\projects\\react-emessage\\client\\src\\components\\add.friend.modal\\AddFriendModal.jsx",["109"],"import React, { useState } from \"react\";\r\nimport { Button, Modal, Input, Message } from \"semantic-ui-react\";\r\nimport { fireStore } from \"../../firebase/config\";\r\nconst AddFriendModal = ({ user }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [searchId, setSearchId] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleOnChange = (e) => {\r\n    setSearchId(e.target.value);\r\n  };\r\n\r\n  const handleOnClick = async (e) => {\r\n    const friendRef = fireStore.collection(\"users\").doc(searchId);\r\n    const doc = await friendRef.get();\r\n\r\n    if (!doc.exists) {\r\n      setError(\"user does not exist\");\r\n    } else {\r\n      const doc = await friendRef.collection(\"requests\").add({\r\n        id: user.uid,\r\n        displayName: user.displayName,\r\n      });\r\n\r\n      setError(\"\");\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      centered={false}\r\n      open={open}\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      trigger={<Button primary>Add Friend</Button>}\r\n    >\r\n      <Modal.Header>Enter your friend ID</Modal.Header>\r\n      <Modal.Content>\r\n        {error !== \"\" ? (\r\n          <Message negative>\r\n            <Message.Header>{error}</Message.Header>\r\n          </Message>\r\n        ) : null}\r\n\r\n        <Modal.Description>\r\n          <Input\r\n            icon=\"users\"\r\n            iconPosition=\"left\"\r\n            placeholder=\"Search users...\"\r\n            onChange={handleOnChange}\r\n            fluid\r\n          />\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button onClick={handleOnClick}>OK</Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddFriendModal;\r\n","c:\\projects\\react-emessage\\client\\src\\components\\send.message\\SendMessage.jsx",["110","111","112","113","114","115"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Input } from \"semantic-ui-react\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nvar socket = null;\r\nconst SendMessage = () => {\r\n  // const [currentUser] = useState(friends[Math.floor(Math.random() * 7)]);\r\n  const friends = useSelector(({ friendReducer }) => friendReducer);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  // console.log(currentUser);\r\n\r\n  // useEffect(() => {\r\n  //   socket = io(\"http://localhost:8000\");\r\n  //   socket.on(currentUser.name, (socket) => {\r\n  //     console.log(socket);\r\n  //   });\r\n  // }, []);\r\n\r\n  const handleOnChange = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    // socket.emit(\"send\", {\r\n    //   sender: currentUser.name,\r\n    //   receiver,\r\n    //   message,\r\n    // });\r\n    setMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <Form className=\"message-form\" onSubmit={handleOnSubmit}>\r\n      <Input fluid type=\"text\">\r\n        <input value={message} onChange={handleOnChange} />\r\n        <Button type=\"submit\" primary>\r\n          send\r\n        </Button>\r\n      </Input>\r\n    </Form>\r\n  );\r\n};\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   receiver: state.friendReducer.receiver,\r\n//   friends: state.friendReducer.friends,\r\n// });\r\n\r\n// export default connect(mapStateToProps)(SendMessage);\r\n\r\nexport default SendMessage;\r\n",["116","117"],"c:\\projects\\react-emessage\\client\\src\\components\\friend.list\\FriendList.jsx",["118","119"],"import React, { useState } from \"react\";\r\nimport \"./friend.list.styles.css\";\r\nimport { List } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport FriendItem from \"../firend.item/FriendItem\";\r\nconst FriendList = ({ friends }) => {\r\n  const [currentUser, setCurrentUser] = useState({\r\n    userId: \"admin\",\r\n    userName: \"edwin\",\r\n    sendMessage: \"\",\r\n  });\r\n\r\n  return (\r\n    <div className=\"friend-list\">\r\n      <List divided relaxed>\r\n        {friends.map((friend) => (\r\n          <FriendItem key={friend.id} friend={friend} />\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { friends: state.friendReducer.friends };\r\n};\r\n\r\nexport default connect(mapStateToProps)(FriendList);\r\n","c:\\projects\\react-emessage\\client\\src\\components\\menu\\TheMenu.jsx",[],"c:\\projects\\react-emessage\\client\\src\\App.js",[],"c:\\projects\\react-emessage\\client\\src\\pages\\SignUpPage.jsx",[],"c:\\projects\\react-emessage\\client\\src\\pages\\NotFoundPage.jsx",[],["120","121"],"c:\\projects\\react-emessage\\client\\src\\pages\\SignInPage.jsx",["122","123","124"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory, Redirect } from \"react-router-dom\";\r\nimport { signIn } from \"../redux/friendReducer/action\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { auth } from \"../firebase/config\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Message,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\n\r\nconst SignInPage = () => {\r\n  const [signInUser, setSignInUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleOnChange = (e) => {\r\n    setSignInUser({ ...signInUser, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .signInWithEmailAndPassword(signInUser.email, signInUser.password)\r\n      .then((result) => dispatch(signIn(result)))\r\n      .catch((error) => {\r\n        setError(error.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid textAlign=\"center\" style={{ marginTop: \"100px\" }}>\r\n      <Grid.Column style={{ maxWidth: 450 }}>\r\n        <Header as=\"h2\" color=\"blue\" textAlign=\"center\">\r\n          Sign-in to your account\r\n        </Header>\r\n        {error !== \"\" ? (\r\n          <Message negative>\r\n            <Message.Header>{error}</Message.Header>\r\n          </Message>\r\n        ) : null}\r\n        <Form onSubmit={handleOnSubmit} size=\"large\">\r\n          <Segment>\r\n            <Form.Input\r\n              fluid\r\n              icon=\"user\"\r\n              iconPosition=\"left\"\r\n              placeholder=\"E-mail address\"\r\n              name=\"email\"\r\n              onChange={handleOnChange}\r\n            />\r\n            <Form.Input\r\n              fluid\r\n              icon=\"lock\"\r\n              iconPosition=\"left\"\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              onChange={handleOnChange}\r\n            />\r\n\r\n            <Button color=\"blue\" fluid size=\"large\">\r\n              SignIn\r\n            </Button>\r\n          </Segment>\r\n        </Form>\r\n        <Message>\r\n          New to us? <Link to=\"signup\">Sign Up</Link>\r\n        </Message>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n// };\r\n\r\nexport default SignInPage;\r\n","c:\\projects\\react-emessage\\client\\src\\components\\firend.item\\FriendItem.jsx",[],"c:\\projects\\react-emessage\\client\\src\\firebase\\config.js",[],"c:\\projects\\react-emessage\\client\\src\\components\\message.panel\\MessagePanel.jsx",[],"c:\\projects\\react-emessage\\client\\src\\components\\message.item\\MessageItem.jsx",[],"c:\\projects\\react-emessage\\client\\src\\components\\message.box\\MessageBox.jsx",[],["125","126"],"c:\\projects\\react-emessage\\client\\src\\components\\the.header\\TheHeader.jsx",["127"],"import React from \"react\";\r\nimport { Segment, Menu, Header } from \"semantic-ui-react\";\r\nexport const TheHeader = ({ currentUser }) => {\r\n  return (\r\n    <Menu color=\"blue\" inverted secondary>\r\n      <Menu.Item>\r\n        <Header as=\"h2\" inverted textAlign=\"center\">\r\n          eMessage\r\n        </Header>\r\n      </Menu.Item>\r\n      {/* <Menu.Menu position=\"right\">\r\n          <Menu.Item>Hello, </Menu.Item>\r\n          <Menu.Item name=\"logout\" />\r\n        </Menu.Menu> */}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default TheHeader;\r\n",["128","129"],"c:\\projects\\react-emessage\\client\\src\\index.js",[],"c:\\projects\\react-emessage\\client\\src\\redux\\store.js",[],"c:\\projects\\react-emessage\\client\\src\\redux\\friendReducer\\type.js",[],"c:\\projects\\react-emessage\\client\\src\\redux\\friendReducer\\action.js",[],"c:\\projects\\react-emessage\\client\\src\\redux\\friendReducer\\reducer.js",[],"c:\\projects\\react-emessage\\client\\src\\components\\request.list.modal\\RequestList.jsx",["130"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Icon, Modal } from \"semantic-ui-react\";\r\nimport RequestItem from \"../request.item/RequestItem\";\r\nimport { fireStore } from \"../../firebase/config\";\r\nconst RequestListModal = ({ user }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [numOfReq, setNumOfReq] = useState(0);\r\n  const [requestList, setRequestList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fireStore\r\n      .collection(\"users\")\r\n      .doc(user.uid)\r\n      .collection(\"requests\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        setNumOfReq(snapshot.size);\r\n        snapshot.forEach((doc) => {\r\n          setRequestList((requestList) => [...requestList, doc.data()]);\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      trigger={\r\n        <Button primary>\r\n          <Icon name=\"mail\" />\r\n          {numOfReq}\r\n        </Button>\r\n      }\r\n    >\r\n      <Modal.Header>Requests</Modal.Header>\r\n      <Modal.Content scrolling>\r\n        <Modal.Description>\r\n          {requestList.map((friend) => (\r\n            <RequestItem key={friend.id} friend={friend} user={user} />\r\n          ))}\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button onClick={() => setOpen(false)} primary>\r\n          ok <Icon name=\"chevron right\" />\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\nexport default RequestListModal;\r\n","c:\\projects\\react-emessage\\client\\src\\components\\request.item\\RequestItem.jsx",["131"],"import React from \"react\";\r\nimport { Button, Menu, Header } from \"semantic-ui-react\";\r\nimport { fireStore } from \"../../firebase/config\";\r\nconst RequestItem = ({ friend, user }) => {\r\n  const handleAccept = async () => {\r\n    const userRef = fireStore.collection(\"users\").doc(user.uid);\r\n    const requestRef = userRef.collection(\"requests\");\r\n    const requestSnapshot = await requestRef.where(\"id\", \"==\", friend.id).get();\r\n    console.log(requestSnapshot.docs[0].id);\r\n    const friendsRef = userRef.collection(\"friends\");\r\n\r\n    // requestSnapshot.forEach((doc) => {\r\n    //   friendsRef.add(doc.data());\r\n    // });\r\n\r\n    //firend.id\r\n    //从我的requests移到firends\r\n    //删除request\r\n    //firend.id 加到 friends\r\n  };\r\n\r\n  const handleDelete = () => {};\r\n\r\n  return (\r\n    <Menu key={friend.id}>\r\n      <Menu.Item>\r\n        <Header size=\"small\">{friend.displayName}</Header>\r\n      </Menu.Item>\r\n      <Menu.Menu position=\"right\">\r\n        <Menu.Item>\r\n          <Button onClick={handleAccept} primary>\r\n            Accept\r\n          </Button>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Button onClick={handleDelete} primary>\r\n            Delete\r\n          </Button>\r\n        </Menu.Item>\r\n      </Menu.Menu>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default RequestItem;\r\n",{"ruleId":"132","severity":1,"message":"133","line":5,"column":10,"nodeType":"134","messageId":"135","endLine":5,"endColumn":18},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"132","severity":1,"message":"140","line":20,"column":13,"nodeType":"134","messageId":"135","endLine":20,"endColumn":16},{"ruleId":"132","severity":1,"message":"141","line":1,"column":27,"nodeType":"134","messageId":"135","endLine":1,"endColumn":36},{"ruleId":"132","severity":1,"message":"142","line":3,"column":10,"nodeType":"134","messageId":"135","endLine":3,"endColumn":17},{"ruleId":"132","severity":1,"message":"143","line":3,"column":32,"nodeType":"134","messageId":"135","endLine":3,"endColumn":43},{"ruleId":"132","severity":1,"message":"144","line":4,"column":10,"nodeType":"134","messageId":"135","endLine":4,"endColumn":12},{"ruleId":"132","severity":1,"message":"145","line":6,"column":5,"nodeType":"134","messageId":"135","endLine":6,"endColumn":11},{"ruleId":"132","severity":1,"message":"146","line":9,"column":9,"nodeType":"134","messageId":"135","endLine":9,"endColumn":16},{"ruleId":"136","replacedBy":"147"},{"ruleId":"138","replacedBy":"148"},{"ruleId":"132","severity":1,"message":"149","line":7,"column":10,"nodeType":"134","messageId":"135","endLine":7,"endColumn":21},{"ruleId":"132","severity":1,"message":"150","line":7,"column":23,"nodeType":"134","messageId":"135","endLine":7,"endColumn":37},{"ruleId":"136","replacedBy":"151"},{"ruleId":"138","replacedBy":"152"},{"ruleId":"132","severity":1,"message":"141","line":1,"column":27,"nodeType":"134","messageId":"135","endLine":1,"endColumn":36},{"ruleId":"132","severity":1,"message":"133","line":2,"column":28,"nodeType":"134","messageId":"135","endLine":2,"endColumn":36},{"ruleId":"132","severity":1,"message":"153","line":23,"column":9,"nodeType":"134","messageId":"135","endLine":23,"endColumn":16},{"ruleId":"136","replacedBy":"154"},{"ruleId":"138","replacedBy":"155"},{"ruleId":"132","severity":1,"message":"156","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":17},{"ruleId":"136","replacedBy":"157"},{"ruleId":"138","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":22,"column":6,"nodeType":"161","endLine":22,"endColumn":8,"suggestions":"162"},{"ruleId":"132","severity":1,"message":"163","line":10,"column":11,"nodeType":"134","messageId":"135","endLine":10,"endColumn":21},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["164"],"no-negated-in-lhs",["165"],"'doc' is assigned a value but never used.","'useEffect' is defined but never used.","'connect' is defined but never used.","'useDispatch' is defined but never used.","'io' is defined but never used.","'socket' is assigned a value but never used.","'friends' is assigned a value but never used.",["164"],["165"],"'currentUser' is assigned a value but never used.","'setCurrentUser' is assigned a value but never used.",["164"],["165"],"'history' is assigned a value but never used.",["164"],["165"],"'Segment' is defined but never used.",["164"],["165"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.uid'. Either include it or remove the dependency array.","ArrayExpression",["166"],"'friendsRef' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},"Update the dependencies array to be: [user.uid]",{"range":"169","text":"170"},[753,755],"[user.uid]"]